// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  role           Role      @default(DEMO)
  occupation     String?
  gender         Gender
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
  clinic         Clinic[]
}

model Clinic {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  address   String?
  phone     String?
  email     String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  doctors   Doctor[]
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?   @db.ObjectId
}

model Doctor {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clinic    Clinic   @relation(fields: [clinicId], references: [id])
  clinicId  String   @db.ObjectId
}

enum Role {
  MANAGER
  CLINIC
  DOCTOR
  DEMO
}

enum Gender {
  MALE
  FEMALE
}
